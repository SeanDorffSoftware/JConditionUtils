name: Maven Build

on:
  push:
    branches:
      - mainline
  workflow_dispatch:

env:
  ARTIFACT_NAME_BOM: SBOM
  ARTIFACT_NAME_CYCLONE_DX_REPORT: CycloneDX Report
  ARTIFACT_NAME_JAR: JAR (With Sources And SBOM)
  ARTIFACT_NAME_JAVADOC: JavaDoc
  ARTIFACT_NAME_TEST_RESULTS: Test Results
  FILE_CYCLONE_DX_REPORT: cyclonedx-report.json

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install GPG secret key for OSSRH
        run: |
          cat <(echo -e "${{ secrets.OSSRH_GPG_SECRET_KEY }}") | gpg --batch --import
          gpg --list-secret-keys --LONG
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'zulu'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file
      - name: Build with Maven
        run: mvn -Dgpg.passphrase=${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }} deploy -B install test package
      - name: Generate CycloneDX ${{ env.ARTIFACT_NAME_BOM }}
        run: mvn cyclonedx:makeBom
      - name: Archive ${{ env.ARTIFACT_NAME_JAR }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME_JAR }}
          path: |
            target/*.jar
            target/bom.*
      - name: Archive ${{ env.ARTIFACT_NAME_BOM }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME_BOM }}
          path: target/bom.*
      - name: Archive ${{ env.ARTIFACT_NAME_JAVADOC }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME_JAVADOC }}
          path: target/site/apidocs
      - name: Archive ${{ env.ARTIFACT_NAME_TEST_RESULTS }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME_TEST_RESULTS }}
          path: |
            target/site/surefire-report.html
            target/surefire-reports/*.xml
  cyclonedx:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact ${{ env.ARTIFACT_NAME_BOM }}
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME_BOM }}
      - name: Run CycloneDX CLI
        run: docker run --rm -v "$(pwd)":/workspace cyclonedx/cyclonedx-cli:latest analyze --input-file /workspace/bom.xml --output-format json > ${{ env.FILE_CYCLONE_DX_REPORT }}
      - name: Archive ${{ env.ARTIFACT_NAME_CYCLONE_DX_REPORT }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME_CYCLONE_DX_REPORT }}
          path: ${{ env.FILE_CYCLONE_DX_REPORT }}